Short term
==========

  * "Next" and "Previous" buttons for easily browsing docstrings with the
    same preview state.

  * Plot directive? Merge the sandbox branch?

  * Better documentation.

  * Fix the "Source location for %s known, but failed to find a place for the docstring"
    errors in pydoc-tool.py; appeared to occur in:

        ERROR: Source location for numpy.lib.function_base.iterable known, but failed to find a place for the docstring
        ERROR: Source location for numpy.random.mtrand.RandomState.bytes known, but failed to find a place for the docstring
        ERROR: Source location for numpy.random.mtrand.RandomState.dirichlet known, but failed to find a place for the docstring
        ERROR: Source location for numpy.random.mtrand.RandomState.multinomial known, but failed to find a place for the docstring
        ERROR: Source location for numpy.random.mtrand.RandomState.permutation known, but failed to find a place for the docstring
        ERROR: Source location for numpy.random.mtrand.RandomState.shuffle known, but failed to find a place for the docstring

    So, mostly Pyrex bugs?


Longer term
===========

  * Refactor: the "stats" page does not always reflect the actual history,
    because the database does not contain full history. Missing information
    contains eg.:

        - The original SVN version on which the work was based:
          this messes up word counts after merging docstrings back to SVN.

          Counting word count changes in revisions is not really possible
          before this information is in the database.

        - We don't keep track of separate review history; review status
          change is always associated with a docstring revision.

  * Refactor: views.py has grown too long and messy; ditto for models.py

  * ..image:: directive

  * Support running plot scripts & capturing output images.

  * Fix Recent changes to show only "recent" changes
    (+ browse old changes?)

  * Sandboxing Python so that doctests producing images can be run?

  * Better merging? RCS `merge` is not so intelligent when BASE and MINE
    differ much from each other, but MINE and OTHER are quite similar.

  * Can something be done about stuff whose docstring location is not known at all?

        ERROR: numpy.broadcast: source location for docstring is not known
        ERROR: numpy.core.multiarray.dot: source location for docstring is not known
        ERROR: numpy.core.umath.ldexp: source location for docstring is not known
        ERROR: numpy.e: source location for docstring is not known
        ERROR: numpy.lib._compiled_base.bincount: source location for docstring is not known
        ERROR: numpy.lib._compiled_base.digitize: source location for docstring is not known
        ERROR: numpy.lib._compiled_base.packbits: source location for docstring is not known
        ERROR: numpy.lib._compiled_base.unpackbits: source location for docstring is not known
        ERROR: numpy.ma.core.all: source location for docstring is not known
        ERROR: numpy.newaxis: source location for docstring is not known

